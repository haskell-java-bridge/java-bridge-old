JavaClass {className = "Closeable", classPackage = Just "java.io", classModName = "Java.Io.Closeable", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "close", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Console", classPackage = Just "java.io", classModName = "Java.Io.Console", classParents = ["java.lang.Object"], classIfaces = ["java.io.Flushable"], classConstructors = [], classMethods = [JavaMethod {methodName = "format", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.io.Console"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.Console"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "readLine", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "readLine", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flush", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.io.Console"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.Console"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reader", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.Reader"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.Reader"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "writer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.PrintWriter"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "readPassword", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JArr {componentType = JChar}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[C"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "readPassword", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JChar}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[C"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "File", classPackage = Just "java.io", classModName = "Java.Io.File", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable","java.lang.Comparable"], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.net.URI"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URI"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.io.File"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.File"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.io.File"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.File"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "length", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getParent", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAbsolute", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getCanonicalPath", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setReadOnly", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "list", methodName' = "", methodParams = [JObj {typeName = "java.io.FilenameFilter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.FilenameFilter"}], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.String"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "list", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.String"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "delete", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getParentFile", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.File"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.File"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPath", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAbsolutePath", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAbsoluteFile", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.File"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.File"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getCanonicalFile", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.File"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.File"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toURL", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.URL"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URL"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toURI", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.URI"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URI"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "canRead", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "canWrite", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "exists", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDirectory", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isFile", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isHidden", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastModified", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "createNewFile", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "deleteOnExit", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "listFiles", methodName' = "", methodParams = [JObj {typeName = "java.io.FilenameFilter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.FilenameFilter"}], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.io.File"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.io.File;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "listFiles", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.io.File"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.io.File;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "listFiles", methodName' = "", methodParams = [JObj {typeName = "java.io.FileFilter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.FileFilter"}], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.io.File"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.io.File;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mkdir", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mkdirs", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "renameTo", methodName' = "", methodParams = [JObj {typeName = "java.io.File"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.File"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setLastModified", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setWritable", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setWritable", methodName' = "", methodParams = [JBoolean,JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setReadable", methodName' = "", methodParams = [JBoolean,JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setReadable", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setExecutable", methodName' = "", methodParams = [JBoolean,JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setExecutable", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "canExecute", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "listRoots", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.io.File"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.io.File;"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getTotalSpace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getFreeSpace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getUsableSpace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "createTempFile", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.io.File"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.File"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "createTempFile", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.io.File"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.io.File"}], methodReturnType = Just (JObj {typeName = "java.io.File"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.File"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "separatorChar", fieldType = JChar, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "separator", fieldType = JObj {typeName = "java.lang.String"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "pathSeparatorChar", fieldType = JChar, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "pathSeparator", fieldType = JObj {typeName = "java.lang.String"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "FileDescriptor", classPackage = Just "java.io", classModName = "Java.Io.FileDescriptor", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "valid", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "sync", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "in", fieldType = JObj {typeName = "java.io.FileDescriptor"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "out", fieldType = JObj {typeName = "java.io.FileDescriptor"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "err", fieldType = JObj {typeName = "java.io.FileDescriptor"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "FileFilter", classPackage = Just "java.io", classModName = "Java.Io.FileFilter", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "accept", methodName' = "", methodParams = [JObj {typeName = "java.io.File"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.File"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "FilenameFilter", classPackage = Just "java.io", classModName = "Java.Io.FilenameFilter", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "accept", methodName' = "", methodParams = [JObj {typeName = "java.io.File"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.File"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "FilterOutputStream", classPackage = Just "java.io", classModName = "Java.Io.FilterOutputStream", classParents = ["java.io.OutputStream","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.io.OutputStream"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.OutputStream"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "write", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JArr {componentType = JByte}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JArr {componentType = JByte},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flush", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "close", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Flushable", classPackage = Just "java.io", classModName = "Java.Io.Flushable", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "flush", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "InputStream", classPackage = Just "java.io", classModName = "Java.Io.InputStream", classParents = ["java.lang.Object"], classIfaces = ["java.io.Closeable"], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "close", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mark", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "read", methodName' = "", methodParams = [JArr {componentType = JByte},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "read", methodName' = "", methodParams = [JArr {componentType = JByte}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "read", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "skip", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "available", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "markSupported", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "OutputStream", classPackage = Just "java.io", classModName = "Java.Io.OutputStream", classParents = ["java.lang.Object"], classIfaces = ["java.io.Closeable","java.io.Flushable"], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "write", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JArr {componentType = JByte}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JArr {componentType = JByte},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flush", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "close", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "PrintStream", classPackage = Just "java.io", classModName = "Java.Io.PrintStream", classParents = ["java.io.FilterOutputStream","java.io.OutputStream","java.lang.Object"], classIfaces = ["java.lang.Appendable","java.io.Closeable"], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.io.OutputStream"},JBoolean], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.OutputStream"},NotSoGeneric {jgtBasetype = "boolean"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.io.OutputStream"},JBoolean,JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.OutputStream"},NotSoGeneric {jgtBasetype = "boolean"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.io.File"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.File"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.io.File"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.File"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.io.OutputStream"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.OutputStream"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "println", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.io.PrintStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.io.PrintStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.io.PrintStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "format", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"},JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.io.PrintStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "format", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.io.PrintStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JArr {componentType = JByte},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flush", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "close", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkError", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.io.PrintStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printf", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"},JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.io.PrintStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JArr {componentType = JByte}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "PrintWriter", classPackage = Just "java.io", classModName = "Java.Io.PrintWriter", classParents = ["java.io.Writer","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.io.Writer"},JBoolean], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.Writer"},NotSoGeneric {jgtBasetype = "boolean"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.io.OutputStream"},JBoolean], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.OutputStream"},NotSoGeneric {jgtBasetype = "boolean"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.io.File"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.File"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.io.File"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.File"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.io.Writer"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.Writer"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.io.OutputStream"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.io.OutputStream"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "println", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "println", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.io.PrintWriter"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.io.PrintWriter"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.io.PrintWriter"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.io.Writer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.Writer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.io.Writer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.Writer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.io.Writer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.Writer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "format", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"},JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.io.PrintWriter"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "format", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.io.PrintWriter"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "print", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flush", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "close", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkError", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.io.PrintWriter"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printf", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"},JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.io.PrintWriter"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Reader", classPackage = Just "java.io", classModName = "Java.Io.Reader", classParents = ["java.lang.Object"], classIfaces = ["java.lang.Readable","java.io.Closeable"], classConstructors = [], classMethods = [JavaMethod {methodName = "close", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mark", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "read", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "read", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "read", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "read", methodName' = "", methodParams = [JObj {typeName = "java.nio.CharBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "skip", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "markSupported", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "ready", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Serializable", classPackage = Just "java.io", classModName = "Java.Io.Serializable", classParents = [], classIfaces = [], classConstructors = [], classMethods = [], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Writer", classPackage = Just "java.io", classModName = "Java.Io.Writer", classParents = ["java.lang.Object"], classIfaces = ["java.lang.Appendable","java.io.Closeable","java.io.Flushable"], classConstructors = [], classMethods = [JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.io.Writer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.Writer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.io.Writer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.Writer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.io.Writer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.Writer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "write", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flush", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "close", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "AbstractMethodError", classPackage = Just "java.lang", classModName = "Java.Lang.AbstractMethodError", classParents = ["java.lang.IncompatibleClassChangeError","java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "AbstractStringBuilder", classPackage = Just "java.lang", classModName = "Java.Lang.AbstractStringBuilder", classParents = ["java.lang.Object"], classIfaces = ["java.lang.Appendable","java.lang.CharSequence"], classConstructors = [], classMethods = [JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.StringBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "indexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "indexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "length", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "charAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointBefore", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointCount", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "offsetByCodePoints", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getChars", methodName' = "", methodParams = [JInt,JInt,JArr {componentType = JChar},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastIndexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastIndexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "substring", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "substring", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "subSequence", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.CharSequence"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replace", methodName' = "", methodParams = [JInt,JInt,JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "capacity", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "ensureCapacity", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "trimToSize", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setLength", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setCharAt", methodName' = "", methodParams = [JInt,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "appendCodePoint", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "delete", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "deleteCharAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reverse", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Appendable", classPackage = Just "java.lang", classModName = "Java.Lang.Appendable", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "ArithmeticException", classPackage = Just "java.lang", classModName = "Java.Lang.ArithmeticException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "ArrayIndexOutOfBoundsException", classPackage = Just "java.lang", classModName = "Java.Lang.ArrayIndexOutOfBoundsException", classParents = ["java.lang.IndexOutOfBoundsException","java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "ArrayStoreException", classPackage = Just "java.lang", classModName = "Java.Lang.ArrayStoreException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "AssertionError", classPackage = Just "java.lang", classModName = "Java.Lang.AssertionError", classParents = ["java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [JDouble], constructorGenericParams = [NotSoGeneric {jgtBasetype = "double"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Object"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JBoolean], constructorGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JChar], constructorGenericParams = [NotSoGeneric {jgtBasetype = "char"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JLong], constructorGenericParams = [NotSoGeneric {jgtBasetype = "long"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JFloat], constructorGenericParams = [NotSoGeneric {jgtBasetype = "float"}], constructorTypeParams = []},JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Boolean", classPackage = Just "java.lang", classModName = "Java.Lang.Boolean", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable","java.lang.Comparable"], classConstructors = [JavaConstructor {constructorParams = [JBoolean], constructorGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Boolean"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Boolean"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getBoolean", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "booleanValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Boolean"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.Boolean"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseBoolean", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "TRUE", fieldType = JObj {typeName = "java.lang.Boolean"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "FALSE", fieldType = JObj {typeName = "java.lang.Boolean"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TYPE", fieldType = JObj {typeName = "java.lang.Class"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Byte", classPackage = Just "java.lang", classModName = "Java.Lang.Byte", classParents = ["java.lang.Number","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [JavaConstructor {constructorParams = [JByte], constructorGenericParams = [NotSoGeneric {jgtBasetype = "byte"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [JByte], methodGenericParams = [NotSoGeneric {jgtBasetype = "byte"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Byte"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Byte"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "byteValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "shortValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "intValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "longValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "floatValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "doubleValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Byte"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Byte"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Byte"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Byte"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JByte], methodGenericParams = [NotSoGeneric {jgtBasetype = "byte"}], methodReturnType = Just (JObj {typeName = "java.lang.Byte"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Byte"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "decode", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Byte"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Byte"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseByte", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseByte", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "MIN_VALUE", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_VALUE", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TYPE", fieldType = JObj {typeName = "java.lang.Class"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SIZE", fieldType = JInt, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "CharSequence", classPackage = Just "java.lang", classModName = "Java.Lang.CharSequence", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "length", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "charAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "subSequence", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.CharSequence"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Character", classPackage = Just "java.lang", classModName = "Java.Lang.Character", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable","java.lang.Comparable"], classConstructors = [JavaConstructor {constructorParams = [JChar], constructorGenericParams = [NotSoGeneric {jgtBasetype = "char"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "isJavaIdentifierStart", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isJavaIdentifierStart", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isJavaIdentifierPart", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isJavaIdentifierPart", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reverseBytes", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Character"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Character"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "charValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.Character"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Character"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointAt", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointAt", methodName' = "", methodParams = [JArr {componentType = JChar},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointAt", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointBefore", methodName' = "", methodParams = [JArr {componentType = JChar},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointBefore", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointBefore", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointCount", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointCount", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "offsetByCodePoints", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "offsetByCodePoints", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt,JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toLowerCase", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toLowerCase", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toUpperCase", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toUpperCase", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toChars", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JArr {componentType = JChar}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[C"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toChars", methodName' = "", methodParams = [JInt,JArr {componentType = JChar},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "charCount", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getType", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getType", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isValidCodePoint", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLowSurrogate", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isHighSurrogate", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSupplementaryCodePoint", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSurrogatePair", methodName' = "", methodParams = [JChar,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toCodePoint", methodName' = "", methodParams = [JChar,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLowerCase", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLowerCase", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isUpperCase", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isUpperCase", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isTitleCase", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isTitleCase", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDigit", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDigit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDefined", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDefined", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLetter", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLetter", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLetterOrDigit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLetterOrDigit", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isJavaLetter", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isJavaLetterOrDigit", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isUnicodeIdentifierStart", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isUnicodeIdentifierStart", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isUnicodeIdentifierPart", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isUnicodeIdentifierPart", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isIdentifierIgnorable", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isIdentifierIgnorable", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toTitleCase", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toTitleCase", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "digit", methodName' = "", methodParams = [JChar,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "digit", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getNumericValue", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getNumericValue", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSpace", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSpaceChar", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSpaceChar", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isWhitespace", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isWhitespace", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isISOControl", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isISOControl", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "forDigit", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDirectionality", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDirectionality", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isMirrored", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isMirrored", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "MIN_RADIX", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_RADIX", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_VALUE", fieldType = JChar, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_VALUE", fieldType = JChar, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TYPE", fieldType = JObj {typeName = "java.lang.Class"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "UNASSIGNED", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "UPPERCASE_LETTER", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LOWERCASE_LETTER", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TITLECASE_LETTER", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MODIFIER_LETTER", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "OTHER_LETTER", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "NON_SPACING_MARK", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ENCLOSING_MARK", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "COMBINING_SPACING_MARK", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DECIMAL_DIGIT_NUMBER", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LETTER_NUMBER", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "OTHER_NUMBER", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SPACE_SEPARATOR", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LINE_SEPARATOR", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "PARAGRAPH_SEPARATOR", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CONTROL", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "FORMAT", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "PRIVATE_USE", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SURROGATE", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DASH_PUNCTUATION", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "START_PUNCTUATION", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "END_PUNCTUATION", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CONNECTOR_PUNCTUATION", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "OTHER_PUNCTUATION", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MATH_SYMBOL", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CURRENCY_SYMBOL", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MODIFIER_SYMBOL", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "OTHER_SYMBOL", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "INITIAL_QUOTE_PUNCTUATION", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "FINAL_QUOTE_PUNCTUATION", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_UNDEFINED", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_LEFT_TO_RIGHT", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_RIGHT_TO_LEFT", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_EUROPEAN_NUMBER", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_ARABIC_NUMBER", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_COMMON_NUMBER_SEPARATOR", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_NONSPACING_MARK", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_BOUNDARY_NEUTRAL", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_PARAGRAPH_SEPARATOR", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_SEGMENT_SEPARATOR", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_WHITESPACE", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_OTHER_NEUTRALS", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DIRECTIONALITY_POP_DIRECTIONAL_FORMAT", fieldType = JByte, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_HIGH_SURROGATE", fieldType = JChar, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_HIGH_SURROGATE", fieldType = JChar, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_LOW_SURROGATE", fieldType = JChar, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_LOW_SURROGATE", fieldType = JChar, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_SURROGATE", fieldType = JChar, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_SURROGATE", fieldType = JChar, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_SUPPLEMENTARY_CODE_POINT", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_CODE_POINT", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_CODE_POINT", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SIZE", fieldType = JInt, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Character$Subset", classPackage = Just "java.lang", classModName = "Java.Lang.CharacterSubset", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Character$UnicodeBlock", classPackage = Just "java.lang", classModName = "Java.Lang.CharacterUnicodeBlock", classParents = ["java.lang.Character$Subset","java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "forName", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Character$UnicodeBlock"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Character$UnicodeBlock"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "of", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.Character$UnicodeBlock"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Character$UnicodeBlock"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "of", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Character$UnicodeBlock"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Character$UnicodeBlock"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "BASIC_LATIN", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LATIN_1_SUPPLEMENT", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LATIN_EXTENDED_A", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LATIN_EXTENDED_B", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "IPA_EXTENSIONS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SPACING_MODIFIER_LETTERS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "COMBINING_DIACRITICAL_MARKS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "GREEK", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CYRILLIC", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ARMENIAN", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "HEBREW", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ARABIC", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DEVANAGARI", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "BENGALI", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "GURMUKHI", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "GUJARATI", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ORIYA", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TAMIL", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TELUGU", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "KANNADA", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MALAYALAM", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "THAI", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LAO", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TIBETAN", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "GEORGIAN", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "HANGUL_JAMO", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LATIN_EXTENDED_ADDITIONAL", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "GREEK_EXTENDED", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "GENERAL_PUNCTUATION", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SUPERSCRIPTS_AND_SUBSCRIPTS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CURRENCY_SYMBOLS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "COMBINING_MARKS_FOR_SYMBOLS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LETTERLIKE_SYMBOLS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "NUMBER_FORMS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ARROWS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MATHEMATICAL_OPERATORS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MISCELLANEOUS_TECHNICAL", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CONTROL_PICTURES", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "OPTICAL_CHARACTER_RECOGNITION", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ENCLOSED_ALPHANUMERICS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "BOX_DRAWING", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "BLOCK_ELEMENTS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "GEOMETRIC_SHAPES", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MISCELLANEOUS_SYMBOLS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DINGBATS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CJK_SYMBOLS_AND_PUNCTUATION", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "HIRAGANA", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "KATAKANA", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "BOPOMOFO", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "HANGUL_COMPATIBILITY_JAMO", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "KANBUN", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ENCLOSED_CJK_LETTERS_AND_MONTHS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CJK_COMPATIBILITY", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CJK_UNIFIED_IDEOGRAPHS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "HANGUL_SYLLABLES", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "PRIVATE_USE_AREA", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CJK_COMPATIBILITY_IDEOGRAPHS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ALPHABETIC_PRESENTATION_FORMS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ARABIC_PRESENTATION_FORMS_A", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "COMBINING_HALF_MARKS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CJK_COMPATIBILITY_FORMS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SMALL_FORM_VARIANTS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ARABIC_PRESENTATION_FORMS_B", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "HALFWIDTH_AND_FULLWIDTH_FORMS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SPECIALS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SURROGATES_AREA", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SYRIAC", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "THAANA", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SINHALA", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MYANMAR", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ETHIOPIC", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CHEROKEE", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "OGHAM", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "RUNIC", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "KHMER", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MONGOLIAN", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "BRAILLE_PATTERNS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CJK_RADICALS_SUPPLEMENT", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "KANGXI_RADICALS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "IDEOGRAPHIC_DESCRIPTION_CHARACTERS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "BOPOMOFO_EXTENDED", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "YI_SYLLABLES", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "YI_RADICALS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CYRILLIC_SUPPLEMENTARY", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TAGALOG", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "HANUNOO", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "BUHID", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TAGBANWA", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LIMBU", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TAI_LE", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "KHMER_SYMBOLS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "PHONETIC_EXTENSIONS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SUPPLEMENTAL_ARROWS_A", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SUPPLEMENTAL_ARROWS_B", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SUPPLEMENTAL_MATHEMATICAL_OPERATORS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MISCELLANEOUS_SYMBOLS_AND_ARROWS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "KATAKANA_PHONETIC_EXTENSIONS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "YIJING_HEXAGRAM_SYMBOLS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "VARIATION_SELECTORS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LINEAR_B_SYLLABARY", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LINEAR_B_IDEOGRAMS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "AEGEAN_NUMBERS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "OLD_ITALIC", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "GOTHIC", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "UGARITIC", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DESERET", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SHAVIAN", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "OSMANYA", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CYPRIOT_SYLLABARY", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "BYZANTINE_MUSICAL_SYMBOLS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MUSICAL_SYMBOLS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TAI_XUAN_JING_SYMBOLS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MATHEMATICAL_ALPHANUMERIC_SYMBOLS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TAGS", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "VARIATION_SELECTORS_SUPPLEMENT", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SUPPLEMENTARY_PRIVATE_USE_AREA_A", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SUPPLEMENTARY_PRIVATE_USE_AREA_B", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "HIGH_SURROGATES", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "HIGH_PRIVATE_USE_SURROGATES", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LOW_SURROGATES", fieldType = JObj {typeName = "java.lang.Character$UnicodeBlock"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Class", classPackage = Just "java.lang", classModName = "Java.Lang.Class", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable","java.lang.reflect.GenericDeclaration","java.lang.reflect.Type","java.lang.reflect.AnnotatedElement"], classConstructors = [], classMethods = [JavaMethod {methodName = "forName", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "forName", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JBoolean,JObj {typeName = "java.lang.ClassLoader"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "boolean"},NotSoGeneric {jgtBasetype = "java.lang.ClassLoader"}], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAssignableFrom", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "isInstance", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getModifiers", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "isInterface", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "isArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "isPrimitive", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getSuperclass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getComponentType", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "newInstance", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAnnotation", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSynthetic", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClassLoader", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.ClassLoader"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ClassLoader"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getTypeParameters", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.TypeVariable"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.reflect.TypeVariable", jgtParameters = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getGenericSuperclass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.reflect.Type"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.reflect.Type"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPackage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Package"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Package"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInterfaces", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Class"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getGenericInterfaces", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.Type"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.Type;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSigners", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Object"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getEnclosingMethod", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.reflect.Method"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.reflect.Method"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getEnclosingConstructor", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.reflect.Constructor"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.reflect.Constructor", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaringClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getEnclosingClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSimpleName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getCanonicalName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAnonymousClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLocalClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isMemberClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClasses", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Class"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getFields", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.Field"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.Field;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMethods", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.Method"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.Method;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getConstructors", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.Constructor"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.reflect.Constructor", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getField", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.reflect.Field"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.reflect.Field"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMethod", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Class"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}], methodReturnType = Just (JObj {typeName = "java.lang.reflect.Method"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.reflect.Method"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getConstructor", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.Class"}}], methodGenericParams = [GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}], methodReturnType = Just (JObj {typeName = "java.lang.reflect.Constructor"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.reflect.Constructor", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredClasses", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Class"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredFields", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.Field"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.Field;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredMethods", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.Method"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.Method;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredConstructors", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.Constructor"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.reflect.Constructor", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredField", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.reflect.Field"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.reflect.Field"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredMethod", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Class"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}], methodReturnType = Just (JObj {typeName = "java.lang.reflect.Method"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.reflect.Method"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredConstructor", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.Class"}}], methodGenericParams = [GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}], methodReturnType = Just (JObj {typeName = "java.lang.reflect.Constructor"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.reflect.Constructor", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getResourceAsStream", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.io.InputStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.InputStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getResource", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.net.URL"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URL"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getProtectionDomain", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.security.ProtectionDomain"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.security.ProtectionDomain"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "desiredAssertionStatus", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isEnum", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getEnumConstants", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Object"}}), methodGenericReturnType = GenericArray {jgtComponentType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "cast", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asSubclass", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_U"}}]}], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_U"}}], jgtLowerBounds = []}]}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_U"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotation", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_A"}}]}], methodReturnType = Just (JObj {typeName = "java.lang.annotation.Annotation"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_A"}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_A"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}]}], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAnnotationPresent", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "ClassCastException", classPackage = Just "java.lang", classModName = "Java.Lang.ClassCastException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "ClassCircularityError", classPackage = Just "java.lang", classModName = "Java.Lang.ClassCircularityError", classParents = ["java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "ClassFormatError", classPackage = Just "java.lang", classModName = "Java.Lang.ClassFormatError", classParents = ["java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "ClassLoader", classPackage = Just "java.lang", classModName = "Java.Lang.ClassLoader", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "loadClass", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSystemClassLoader", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.ClassLoader"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ClassLoader"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getResourceAsStream", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.io.InputStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.InputStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getResource", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.net.URL"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URL"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSystemResourceAsStream", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.io.InputStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.InputStream"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSystemResource", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.net.URL"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URL"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getResources", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [NotSoGeneric {jgtBasetype = "java.net.URL"}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSystemResources", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [NotSoGeneric {jgtBasetype = "java.net.URL"}]}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getParent", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.ClassLoader"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ClassLoader"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setDefaultAssertionStatus", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "setPackageAssertionStatus", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "setClassAssertionStatus", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "clearAssertionStatus", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "ClassNotFoundException", classPackage = Just "java.lang", classModName = "Java.Lang.ClassNotFoundException", classParents = ["java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getException", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "CloneNotSupportedException", classPackage = Just "java.lang", classModName = "Java.Lang.CloneNotSupportedException", classParents = ["java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Cloneable", classPackage = Just "java.lang", classModName = "Java.Lang.Cloneable", classParents = [], classIfaces = [], classConstructors = [], classMethods = [], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Comparable", classPackage = Just "java.lang", classModName = "Java.Lang.Comparable", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Compiler", classPackage = Just "java.lang", classModName = "Java.Lang.Compiler", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "compileClass", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "compileClasses", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "command", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "enable", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "disable", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Deprecated", classPackage = Just "java.lang", classModName = "Java.Lang.Deprecated", classParents = [], classIfaces = ["java.lang.annotation.Annotation"], classConstructors = [], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "annotationType", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = True, classAbstract = True, classFinal = False}
JavaClass {className = "Double", classPackage = Just "java.lang", classModName = "Java.Lang.Double", classParents = ["java.lang.Number","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [JavaConstructor {constructorParams = [JDouble], constructorGenericParams = [NotSoGeneric {jgtBasetype = "double"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "doubleToRawLongBits", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "doubleToLongBits", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "longBitsToDouble", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Double"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Double"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "byteValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "shortValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "intValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "longValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "floatValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "doubleValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Double"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.Double"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toHexString", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compare", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isNaN", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isNaN", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isInfinite", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isInfinite", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseDouble", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "POSITIVE_INFINITY", fieldType = JDouble, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "NEGATIVE_INFINITY", fieldType = JDouble, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "NaN", fieldType = JDouble, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_VALUE", fieldType = JDouble, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_NORMAL", fieldType = JDouble, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_VALUE", fieldType = JDouble, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_EXPONENT", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_EXPONENT", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SIZE", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TYPE", fieldType = JObj {typeName = "java.lang.Class"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Enum", classPackage = Just "java.lang", classModName = "Java.Lang.Enum", classParents = ["java.lang.Object"], classIfaces = ["java.lang.Comparable","java.io.Serializable"], classConstructors = [], classMethods = [JavaMethod {methodName = "name", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Enum"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"},JObj {typeName = "java.lang.String"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Enum"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [Parameterized {jgtBasetype = "java.lang.Enum", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}]}], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaringClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "ordinal", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_E"}, paramBounds = [Parameterized {jgtBasetype = "java.lang.Enum", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}]}]}], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "EnumConstantNotPresentException", classPackage = Just "java.lang", classModName = "Java.Lang.EnumConstantNotPresentException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Class"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Enum"}], jgtLowerBounds = []}]},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "enumType", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Enum"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "constantName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Error", classPackage = Just "java.lang", classModName = "Java.Lang.Error", classParents = ["java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Exception", classPackage = Just "java.lang", classModName = "Java.Lang.Exception", classParents = ["java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "ExceptionInInitializerError", classPackage = Just "java.lang", classModName = "Java.Lang.ExceptionInInitializerError", classParents = ["java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getException", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Float", classPackage = Just "java.lang", classModName = "Java.Lang.Float", classParents = ["java.lang.Number","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [JavaConstructor {constructorParams = [JFloat], constructorGenericParams = [NotSoGeneric {jgtBasetype = "float"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JDouble], constructorGenericParams = [NotSoGeneric {jgtBasetype = "double"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "floatToRawIntBits", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "floatToIntBits", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "intBitsToFloat", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Float"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Float"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "byteValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "shortValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "intValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "longValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "floatValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "doubleValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Float"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.Float"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toHexString", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compare", methodName' = "", methodParams = [JFloat,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isNaN", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isNaN", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseFloat", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isInfinite", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isInfinite", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "POSITIVE_INFINITY", fieldType = JFloat, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "NEGATIVE_INFINITY", fieldType = JFloat, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "NaN", fieldType = JFloat, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_VALUE", fieldType = JFloat, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_NORMAL", fieldType = JFloat, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_VALUE", fieldType = JFloat, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_EXPONENT", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MIN_EXPONENT", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SIZE", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TYPE", fieldType = JObj {typeName = "java.lang.Class"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "IllegalAccessError", classPackage = Just "java.lang", classModName = "Java.Lang.IllegalAccessError", classParents = ["java.lang.IncompatibleClassChangeError","java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "IllegalAccessException", classPackage = Just "java.lang", classModName = "Java.Lang.IllegalAccessException", classParents = ["java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "IllegalArgumentException", classPackage = Just "java.lang", classModName = "Java.Lang.IllegalArgumentException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "IllegalMonitorStateException", classPackage = Just "java.lang", classModName = "Java.Lang.IllegalMonitorStateException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "IllegalStateException", classPackage = Just "java.lang", classModName = "Java.Lang.IllegalStateException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "IllegalThreadStateException", classPackage = Just "java.lang", classModName = "Java.Lang.IllegalThreadStateException", classParents = ["java.lang.IllegalArgumentException","java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "IncompatibleClassChangeError", classPackage = Just "java.lang", classModName = "Java.Lang.IncompatibleClassChangeError", classParents = ["java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "IndexOutOfBoundsException", classPackage = Just "java.lang", classModName = "Java.Lang.IndexOutOfBoundsException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "InheritableThreadLocal", classPackage = Just "java.lang", classModName = "Java.Lang.InheritableThreadLocal", classParents = ["java.lang.ThreadLocal","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remove", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "set", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "InstantiationError", classPackage = Just "java.lang", classModName = "Java.Lang.InstantiationError", classParents = ["java.lang.IncompatibleClassChangeError","java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "InstantiationException", classPackage = Just "java.lang", classModName = "Java.Lang.InstantiationException", classParents = ["java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Integer", classPackage = Just "java.lang", classModName = "Java.Lang.Integer", classParents = ["java.lang.Number","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [JavaConstructor {constructorParams = [JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "numberOfLeadingZeros", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "numberOfTrailingZeros", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "bitCount", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reverseBytes", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Integer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Integer"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "byteValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "shortValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "intValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "longValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "floatValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "doubleValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Integer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Integer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Integer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Integer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Integer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Integer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toHexString", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "decode", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Integer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Integer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reverse", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseInt", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseInt", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toOctalString", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toBinaryString", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInteger", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Integer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Integer"}], methodReturnType = Just (JObj {typeName = "java.lang.Integer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Integer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInteger", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Integer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Integer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInteger", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Integer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Integer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "highestOneBit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lowestOneBit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rotateLeft", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rotateRight", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "signum", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "MIN_VALUE", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_VALUE", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TYPE", fieldType = JObj {typeName = "java.lang.Class"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SIZE", fieldType = JInt, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "InternalError", classPackage = Just "java.lang", classModName = "Java.Lang.InternalError", classParents = ["java.lang.VirtualMachineError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "InterruptedException", classPackage = Just "java.lang", classModName = "Java.Lang.InterruptedException", classParents = ["java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Iterable", classPackage = Just "java.lang", classModName = "Java.Lang.Iterable", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "iterator", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Iterator"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Iterator", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "LinkageError", classPackage = Just "java.lang", classModName = "Java.Lang.LinkageError", classParents = ["java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Long", classPackage = Just "java.lang", classModName = "Java.Lang.Long", classParents = ["java.lang.Number","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [JavaConstructor {constructorParams = [JLong], constructorGenericParams = [NotSoGeneric {jgtBasetype = "long"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "numberOfLeadingZeros", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "numberOfTrailingZeros", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "bitCount", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reverseBytes", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Long"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Long"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLong", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Long"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLong", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.Long"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLong", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Long"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Long"}], methodReturnType = Just (JObj {typeName = "java.lang.Long"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "byteValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "shortValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "intValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "longValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "floatValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "doubleValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Long"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Long"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.Long"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toHexString", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "decode", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Long"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reverse", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toOctalString", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toBinaryString", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "highestOneBit", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lowestOneBit", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rotateLeft", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rotateRight", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "signum", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseLong", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseLong", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "MIN_VALUE", fieldType = JLong, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_VALUE", fieldType = JLong, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TYPE", fieldType = JObj {typeName = "java.lang.Class"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SIZE", fieldType = JInt, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Math", classPackage = Just "java.lang", classModName = "Java.Lang.Math", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "abs", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "abs", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "abs", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "abs", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "sin", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "cos", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "tan", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "atan2", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "sqrt", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "log", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "log10", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "pow", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "exp", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "min", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "min", methodName' = "", methodParams = [JFloat,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "min", methodName' = "", methodParams = [JLong,JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "min", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "max", methodName' = "", methodParams = [JFloat,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "max", methodName' = "", methodParams = [JLong,JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "max", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "max", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "scalb", methodName' = "", methodParams = [JFloat,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "scalb", methodName' = "", methodParams = [JDouble,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getExponent", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getExponent", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "signum", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "signum", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asin", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "acos", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "atan", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toRadians", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toDegrees", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "cbrt", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "IEEEremainder", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "ceil", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "floor", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rint", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "round", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "round", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "random", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "ulp", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "ulp", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "sinh", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "cosh", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "tanh", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hypot", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "expm1", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "log1p", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "copySign", methodName' = "", methodParams = [JFloat,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "copySign", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "nextAfter", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "nextAfter", methodName' = "", methodParams = [JFloat,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "nextUp", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "nextUp", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "E", fieldType = JDouble, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "PI", fieldType = JDouble, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "NegativeArraySizeException", classPackage = Just "java.lang", classModName = "Java.Lang.NegativeArraySizeException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "NoClassDefFoundError", classPackage = Just "java.lang", classModName = "Java.Lang.NoClassDefFoundError", classParents = ["java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "NoSuchFieldError", classPackage = Just "java.lang", classModName = "Java.Lang.NoSuchFieldError", classParents = ["java.lang.IncompatibleClassChangeError","java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "NoSuchFieldException", classPackage = Just "java.lang", classModName = "Java.Lang.NoSuchFieldException", classParents = ["java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "NoSuchMethodError", classPackage = Just "java.lang", classModName = "Java.Lang.NoSuchMethodError", classParents = ["java.lang.IncompatibleClassChangeError","java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "NoSuchMethodException", classPackage = Just "java.lang", classModName = "Java.Lang.NoSuchMethodException", classParents = ["java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "NullPointerException", classPackage = Just "java.lang", classModName = "Java.Lang.NullPointerException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Number", classPackage = Just "java.lang", classModName = "Java.Lang.Number", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "byteValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "shortValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "intValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "longValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "floatValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "doubleValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "NumberFormatException", classPackage = Just "java.lang", classModName = "Java.Lang.NumberFormatException", classParents = ["java.lang.IllegalArgumentException","java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Object", classPackage = Just "java.lang", classModName = "Java.Lang.Object", classParents = [], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "OutOfMemoryError", classPackage = Just "java.lang", classModName = "Java.Lang.OutOfMemoryError", classParents = ["java.lang.VirtualMachineError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Override", classPackage = Just "java.lang", classModName = "Java.Lang.Override", classParents = [], classIfaces = ["java.lang.annotation.Annotation"], classConstructors = [], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "annotationType", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = True, classAbstract = True, classFinal = False}
JavaClass {className = "Package", classPackage = Just "java.lang", classModName = "Java.Lang.Package", classParents = ["java.lang.Object"], classIfaces = ["java.lang.reflect.AnnotatedElement"], classConstructors = [], classMethods = [JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPackage", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Package"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Package"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotation", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_A"}}]}], methodReturnType = Just (JObj {typeName = "java.lang.annotation.Annotation"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_A"}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_A"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}]}], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAnnotationPresent", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPackages", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Package"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.Package;"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSealed", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSealed", methodName' = "", methodParams = [JObj {typeName = "java.net.URL"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URL"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSpecificationTitle", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSpecificationVersion", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSpecificationVendor", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getImplementationTitle", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getImplementationVersion", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getImplementationVendor", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isCompatibleWith", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Process", classPackage = Just "java.lang", classModName = "Java.Lang.Process", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "destroy", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInputStream", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.InputStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.InputStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getOutputStream", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.OutputStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.OutputStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getErrorStream", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.InputStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.InputStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "waitFor", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "exitValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "ProcessBuilder", classPackage = Just "java.lang", classModName = "Java.Lang.ProcessBuilder", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.util.List"}], constructorGenericParams = [Parameterized {jgtBasetype = "java.util.List", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"}]}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JObj {typeName = "java.lang.String"}}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "start", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Process"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Process"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "environment", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Map"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Map", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "directory", methodName' = "", methodParams = [JObj {typeName = "java.io.File"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.File"}], methodReturnType = Just (JObj {typeName = "java.lang.ProcessBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ProcessBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "directory", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.File"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.File"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "command", methodName' = "", methodParams = [JObj {typeName = "java.util.List"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.List", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"}]}], methodReturnType = Just (JObj {typeName = "java.lang.ProcessBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ProcessBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "command", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.List"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.List", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "command", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.String"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}], methodReturnType = Just (JObj {typeName = "java.lang.ProcessBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ProcessBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "redirectErrorStream", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "redirectErrorStream", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.ProcessBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ProcessBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Readable", classPackage = Just "java.lang", classModName = "Java.Lang.Readable", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "read", methodName' = "", methodParams = [JObj {typeName = "java.nio.CharBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Runnable", classPackage = Just "java.lang", classModName = "Java.Lang.Runnable", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "run", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Runtime", classPackage = Just "java.lang", classModName = "Java.Lang.Runtime", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "exit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "runFinalizersOnExit", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "loadLibrary", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "load", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "gc", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "runFinalization", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getRuntime", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Runtime"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Runtime"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "freeMemory", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "maxMemory", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "addShutdownHook", methodName' = "", methodParams = [JObj {typeName = "java.lang.Thread"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Thread"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "removeShutdownHook", methodName' = "", methodParams = [JObj {typeName = "java.lang.Thread"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Thread"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "halt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "exec", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.String"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}], methodReturnType = Just (JObj {typeName = "java.lang.Process"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Process"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "exec", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.String"}},JArr {componentType = JObj {typeName = "java.lang.String"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"},NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}], methodReturnType = Just (JObj {typeName = "java.lang.Process"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Process"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "exec", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.String"}},JArr {componentType = JObj {typeName = "java.lang.String"}},JObj {typeName = "java.io.File"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"},NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"},NotSoGeneric {jgtBasetype = "java.io.File"}], methodReturnType = Just (JObj {typeName = "java.lang.Process"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Process"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "exec", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.String"}},JObj {typeName = "java.io.File"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"},NotSoGeneric {jgtBasetype = "java.io.File"}], methodReturnType = Just (JObj {typeName = "java.lang.Process"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Process"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "exec", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.String"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}], methodReturnType = Just (JObj {typeName = "java.lang.Process"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Process"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "exec", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Process"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Process"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "availableProcessors", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "totalMemory", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "traceInstructions", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "traceMethodCalls", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getLocalizedInputStream", methodName' = "", methodParams = [JObj {typeName = "java.io.InputStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.InputStream"}], methodReturnType = Just (JObj {typeName = "java.io.InputStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.InputStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedOutputStream", methodName' = "", methodParams = [JObj {typeName = "java.io.OutputStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.OutputStream"}], methodReturnType = Just (JObj {typeName = "java.io.OutputStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.OutputStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "RuntimeException", classPackage = Just "java.lang", classModName = "Java.Lang.RuntimeException", classParents = ["java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "RuntimePermission", classPackage = Just "java.lang", classModName = "Java.Lang.RuntimePermission", classParents = ["java.security.BasicPermission","java.security.Permission","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "implies", methodName' = "", methodParams = [JObj {typeName = "java.security.Permission"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.security.Permission"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getActions", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "newPermissionCollection", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.security.PermissionCollection"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.security.PermissionCollection"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkGuard", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "SecurityException", classPackage = Just "java.lang", classModName = "Java.Lang.SecurityException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "SecurityManager", classPackage = Just "java.lang", classModName = "Java.Lang.SecurityManager", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "checkPackageAccess", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkMemberAccess", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"},JInt], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkPermission", methodName' = "", methodParams = [JObj {typeName = "java.security.Permission"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.security.Permission"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkPermission", methodName' = "", methodParams = [JObj {typeName = "java.security.Permission"},JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.security.Permission"},NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkCreateClassLoader", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkPropertiesAccess", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkPropertyAccess", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getThreadGroup", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.ThreadGroup"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ThreadGroup"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkAccess", methodName' = "", methodParams = [JObj {typeName = "java.lang.ThreadGroup"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.ThreadGroup"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkAccess", methodName' = "", methodParams = [JObj {typeName = "java.lang.Thread"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Thread"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkExit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkLink", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkRead", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkRead", methodName' = "", methodParams = [JObj {typeName = "java.io.FileDescriptor"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.FileDescriptor"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkRead", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkWrite", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkWrite", methodName' = "", methodParams = [JObj {typeName = "java.io.FileDescriptor"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.FileDescriptor"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkDelete", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkExec", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkConnect", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt,JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkConnect", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkSetFactory", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInCheck", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSecurityContext", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkListen", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkAccept", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkMulticast", methodName' = "", methodParams = [JObj {typeName = "java.net.InetAddress"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.InetAddress"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkMulticast", methodName' = "", methodParams = [JObj {typeName = "java.net.InetAddress"},JByte], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.InetAddress"},NotSoGeneric {jgtBasetype = "byte"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkTopLevelWindow", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkPrintJobAccess", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkSystemClipboardAccess", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkAwtEventQueueAccess", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkPackageDefinition", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkSecurityAccess", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Short", classPackage = Just "java.lang", classModName = "Java.Lang.Short", classParents = ["java.lang.Number","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [JavaConstructor {constructorParams = [JShort], constructorGenericParams = [NotSoGeneric {jgtBasetype = "short"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [JShort], methodGenericParams = [NotSoGeneric {jgtBasetype = "short"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reverseBytes", methodName' = "", methodParams = [JShort], methodGenericParams = [NotSoGeneric {jgtBasetype = "short"}], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Short"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Short"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "byteValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "shortValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "intValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "longValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "floatValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "doubleValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JShort], methodGenericParams = [NotSoGeneric {jgtBasetype = "short"}], methodReturnType = Just (JObj {typeName = "java.lang.Short"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Short"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Short"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Short"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Short"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Short"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "decode", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Short"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Short"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseShort", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseShort", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "MIN_VALUE", fieldType = JShort, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_VALUE", fieldType = JShort, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TYPE", fieldType = JObj {typeName = "java.lang.Class"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SIZE", fieldType = JInt, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "StackOverflowError", classPackage = Just "java.lang", classModName = "Java.Lang.StackOverflowError", classParents = ["java.lang.VirtualMachineError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "StackTraceElement", classPackage = Just "java.lang", classModName = "Java.Lang.StackTraceElement", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getFileName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLineNumber", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClassName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMethodName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isNativeMethod", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "StrictMath", classPackage = Just "java.lang", classModName = "Java.Lang.StrictMath", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "abs", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "abs", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "abs", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "abs", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "sin", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "cos", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "tan", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "atan2", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "sqrt", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "log", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "log10", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "pow", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "exp", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "min", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "min", methodName' = "", methodParams = [JFloat,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "min", methodName' = "", methodParams = [JLong,JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "min", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "max", methodName' = "", methodParams = [JLong,JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "max", methodName' = "", methodParams = [JFloat,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "max", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "max", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "scalb", methodName' = "", methodParams = [JFloat,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "scalb", methodName' = "", methodParams = [JDouble,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getExponent", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getExponent", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "signum", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "signum", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asin", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "acos", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "atan", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "toRadians", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toDegrees", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "cbrt", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "IEEEremainder", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "ceil", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "floor", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rint", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "round", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "round", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "random", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "ulp", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "ulp", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "sinh", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "cosh", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "tanh", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "hypot", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "expm1", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "log1p", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "copySign", methodName' = "", methodParams = [JFloat,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "copySign", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "nextAfter", methodName' = "", methodParams = [JDouble,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "nextAfter", methodName' = "", methodParams = [JFloat,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "nextUp", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "nextUp", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "E", fieldType = JDouble, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "PI", fieldType = JDouble, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "String", classPackage = Just "java.lang", classModName = "Java.Lang.String", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable","java.lang.Comparable","java.lang.CharSequence"], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JChar}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JChar},JInt,JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JInt},JInt,JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[I"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JByte},JInt,JInt,JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JByte},JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JByte},JInt,JInt,JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JByte},JInt,JInt,JObj {typeName = "java.nio.charset.Charset"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.nio.charset.Charset"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JByte},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JByte},JObj {typeName = "java.nio.charset.Charset"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "java.nio.charset.Charset"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JByte},JInt,JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JArr {componentType = JByte}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "[B"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.StringBuffer"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.StringBuilder"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "indexOf", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "indexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "indexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "indexOf", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "length", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isEmpty", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "charAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointBefore", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointCount", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "offsetByCodePoints", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getChars", methodName' = "", methodParams = [JInt,JInt,JArr {componentType = JChar},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getBytes", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JArr {componentType = JByte}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[B"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getBytes", methodName' = "", methodParams = [JInt,JInt,JArr {componentType = JByte},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getBytes", methodName' = "", methodParams = [JObj {typeName = "java.nio.charset.Charset"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.charset.Charset"}], methodReturnType = Just (JArr {componentType = JByte}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[B"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getBytes", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JByte}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[B"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "contentEquals", methodName' = "", methodParams = [JObj {typeName = "java.lang.StringBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "contentEquals", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equalsIgnoreCase", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareToIgnoreCase", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "regionMatches", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.String"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "regionMatches", methodName' = "", methodParams = [JBoolean,JInt,JObj {typeName = "java.lang.String"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "startsWith", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "startsWith", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "endsWith", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastIndexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastIndexOf", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastIndexOf", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastIndexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "substring", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "substring", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "subSequence", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.CharSequence"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "concat", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replace", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replace", methodName' = "", methodParams = [JChar,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "matches", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "contains", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replaceFirst", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replaceAll", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "split", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.String"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "split", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.String"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toLowerCase", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toLowerCase", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toUpperCase", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toUpperCase", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "trim", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toCharArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JChar}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[C"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "format", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "format", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"},JObj {typeName = "java.lang.String"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "copyValueOf", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "copyValueOf", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "intern", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "CASE_INSENSITIVE_ORDER", fieldType = JObj {typeName = "java.util.Comparator"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "StringBuffer", classPackage = Just "java.lang", classModName = "Java.Lang.StringBuffer", classParents = ["java.lang.AbstractStringBuilder","java.lang.Object"], classIfaces = ["java.io.Serializable","java.lang.CharSequence"], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.CharSequence"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.StringBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "append", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.StringBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "indexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "indexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "length", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "charAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "codePointAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "codePointBefore", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "codePointCount", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "offsetByCodePoints", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "getChars", methodName' = "", methodParams = [JInt,JInt,JArr {componentType = JChar},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "lastIndexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastIndexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "substring", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "substring", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "subSequence", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.CharSequence"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "replace", methodName' = "", methodParams = [JInt,JInt,JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replace", methodName' = "", methodParams = [JInt,JInt,JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "capacity", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "ensureCapacity", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "trimToSize", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "setLength", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "setCharAt", methodName' = "", methodParams = [JInt,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "appendCodePoint", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "appendCodePoint", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "delete", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "delete", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "deleteCharAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "deleteCharAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "reverse", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.StringBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "reverse", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "StringBuilder", classPackage = Just "java.lang", classModName = "Java.Lang.StringBuilder", classParents = ["java.lang.AbstractStringBuilder","java.lang.Object"], classIfaces = ["java.io.Serializable","java.lang.CharSequence"], classConstructors = [JavaConstructor {constructorParams = [JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []},JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.CharSequence"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.StringBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.StringBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.StringBuffer"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "indexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "indexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "length", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "charAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointBefore", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "codePointCount", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "offsetByCodePoints", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getChars", methodName' = "", methodParams = [JInt,JInt,JArr {componentType = JChar},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastIndexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastIndexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "substring", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "substring", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "subSequence", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.CharSequence"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replace", methodName' = "", methodParams = [JInt,JInt,JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replace", methodName' = "", methodParams = [JInt,JInt,JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "capacity", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "ensureCapacity", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "trimToSize", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setLength", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setCharAt", methodName' = "", methodParams = [JInt,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "appendCodePoint", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "appendCodePoint", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "delete", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "delete", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "deleteCharAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "deleteCharAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "insert", methodName' = "", methodParams = [JInt,JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reverse", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.AbstractStringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.AbstractStringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reverse", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.StringBuilder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.StringBuilder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "StringIndexOutOfBoundsException", classPackage = Just "java.lang", classModName = "Java.Lang.StringIndexOutOfBoundsException", classParents = ["java.lang.IndexOutOfBoundsException","java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "SuppressWarnings", classPackage = Just "java.lang", classModName = "Java.Lang.SuppressWarnings", classParents = [], classIfaces = ["java.lang.annotation.Annotation"], classConstructors = [], classMethods = [JavaMethod {methodName = "value", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.String"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "annotationType", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = True, classAbstract = True, classFinal = False}
JavaClass {className = "System", classPackage = Just "java.lang", classModName = "Java.Lang.System", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "exit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "runFinalizersOnExit", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "identityHashCode", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "currentTimeMillis", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "nanoTime", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "arraycopy", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JInt,JObj {typeName = "java.lang.Object"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getSecurityManager", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.SecurityManager"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.SecurityManager"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "loadLibrary", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mapLibraryName", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "load", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setIn", methodName' = "", methodParams = [JObj {typeName = "java.io.InputStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.InputStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setOut", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setErr", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "console", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.Console"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.Console"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "inheritedChannel", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.channels.Channel"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.channels.Channel"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setSecurityManager", methodName' = "", methodParams = [JObj {typeName = "java.lang.SecurityManager"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.SecurityManager"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getProperties", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Properties"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.util.Properties"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setProperties", methodName' = "", methodParams = [JObj {typeName = "java.util.Properties"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Properties"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clearProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getenv", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getenv", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Map"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Map", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}]}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "gc", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "runFinalization", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "in", fieldType = JObj {typeName = "java.io.InputStream"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "out", fieldType = JObj {typeName = "java.io.PrintStream"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "err", fieldType = JObj {typeName = "java.io.PrintStream"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Thread", classPackage = Just "java.lang", classModName = "Java.Lang.Thread", classParents = ["java.lang.Object"], classIfaces = ["java.lang.Runnable"], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.lang.ThreadGroup"},JObj {typeName = "java.lang.Runnable"},JObj {typeName = "java.lang.String"},JLong], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.ThreadGroup"},NotSoGeneric {jgtBasetype = "java.lang.Runnable"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "long"}], constructorTypeParams = []},JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Runnable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Runnable"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.ThreadGroup"},JObj {typeName = "java.lang.Runnable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.ThreadGroup"},NotSoGeneric {jgtBasetype = "java.lang.Runnable"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.ThreadGroup"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.ThreadGroup"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Runnable"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Runnable"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.ThreadGroup"},JObj {typeName = "java.lang.Runnable"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.ThreadGroup"},NotSoGeneric {jgtBasetype = "java.lang.Runnable"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "run", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isInterrupted", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "currentThread", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Thread"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Thread"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getThreadGroup", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.ThreadGroup"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ThreadGroup"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "dumpStack", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setPriority", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setDaemon", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "start", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "yield", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "sleep", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "sleep", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "stop", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "stop", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "interrupt", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "interrupted", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "destroy", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAlive", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "suspend", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "resume", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPriority", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setName", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "activeCount", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "enumerate", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.Thread"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.Thread;"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "countStackFrames", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "join", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "join", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "join", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "isDaemon", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkAccess", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getContextClassLoader", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.ClassLoader"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ClassLoader"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setContextClassLoader", methodName' = "", methodParams = [JObj {typeName = "java.lang.ClassLoader"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.ClassLoader"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "holdsLock", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getAllStackTraces", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Map"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Map", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.Thread"},GenericArray {jgtComponentType = NotSoGeneric {jgtBasetype = "java.lang.StackTraceElement"}}]}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getId", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getState", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Thread$State"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Thread$State"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setDefaultUncaughtExceptionHandler", methodName' = "", methodParams = [JObj {typeName = "java.lang.Thread$UncaughtExceptionHandler"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Thread$UncaughtExceptionHandler"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDefaultUncaughtExceptionHandler", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Thread$UncaughtExceptionHandler"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Thread$UncaughtExceptionHandler"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getUncaughtExceptionHandler", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Thread$UncaughtExceptionHandler"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Thread$UncaughtExceptionHandler"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setUncaughtExceptionHandler", methodName' = "", methodParams = [JObj {typeName = "java.lang.Thread$UncaughtExceptionHandler"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Thread$UncaughtExceptionHandler"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "MIN_PRIORITY", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "NORM_PRIORITY", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "MAX_PRIORITY", fieldType = JInt, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Thread$State", classPackage = Just "java.lang", classModName = "Java.Lang.ThreadState", classParents = ["java.lang.Enum","java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "values", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Thread$State"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.Thread$State;"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Thread$State"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Thread$State"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "name", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Enum"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"},JObj {typeName = "java.lang.String"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Enum"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [Parameterized {jgtBasetype = "java.lang.Enum", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}]}], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaringClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "ordinal", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "NEW", fieldType = JObj {typeName = "java.lang.Thread$State"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "RUNNABLE", fieldType = JObj {typeName = "java.lang.Thread$State"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "BLOCKED", fieldType = JObj {typeName = "java.lang.Thread$State"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "WAITING", fieldType = JObj {typeName = "java.lang.Thread$State"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TIMED_WAITING", fieldType = JObj {typeName = "java.lang.Thread$State"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TERMINATED", fieldType = JObj {typeName = "java.lang.Thread$State"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = True, classEnumConstants = [(0,"NEW"),(1,"RUNNABLE"),(2,"BLOCKED"),(3,"WAITING"),(4,"TIMED_WAITING"),(5,"TERMINATED")], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Thread$UncaughtExceptionHandler", classPackage = Just "java.lang", classModName = "Java.Lang.ThreadUncaughtExceptionHandler", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "uncaughtException", methodName' = "", methodParams = [JObj {typeName = "java.lang.Thread"},JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Thread"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "ThreadDeath", classPackage = Just "java.lang", classModName = "Java.Lang.ThreadDeath", classParents = ["java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "ThreadGroup", classPackage = Just "java.lang", classModName = "Java.Lang.ThreadGroup", classParents = ["java.lang.Object"], classIfaces = ["java.lang.Thread$UncaughtExceptionHandler"], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.ThreadGroup"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.ThreadGroup"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "uncaughtException", methodName' = "", methodParams = [JObj {typeName = "java.lang.Thread"},JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Thread"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getParent", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.ThreadGroup"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ThreadGroup"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setDaemon", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "stop", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "interrupt", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "destroy", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "suspend", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "resume", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "activeCount", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "enumerate", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.ThreadGroup"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.ThreadGroup;"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "enumerate", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.ThreadGroup"}},JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.ThreadGroup;"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "enumerate", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.Thread"}},JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.Thread;"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "enumerate", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.Thread"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.Thread;"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDaemon", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkAccess", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMaxPriority", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDestroyed", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "setMaxPriority", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parentOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.ThreadGroup"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.ThreadGroup"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "activeGroupCount", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "list", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "allowThreadSuspension", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "ThreadLocal", classPackage = Just "java.lang", classModName = "Java.Lang.ThreadLocal", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remove", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "set", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Throwable", classPackage = Just "java.lang", classModName = "Java.Lang.Throwable", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "TypeNotPresentException", classPackage = Just "java.lang", classModName = "Java.Lang.TypeNotPresentException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "typeName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "UnknownError", classPackage = Just "java.lang", classModName = "Java.Lang.UnknownError", classParents = ["java.lang.VirtualMachineError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "UnsatisfiedLinkError", classPackage = Just "java.lang", classModName = "Java.Lang.UnsatisfiedLinkError", classParents = ["java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "UnsupportedClassVersionError", classPackage = Just "java.lang", classModName = "Java.Lang.UnsupportedClassVersionError", classParents = ["java.lang.ClassFormatError","java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "UnsupportedOperationException", classPackage = Just "java.lang", classModName = "Java.Lang.UnsupportedOperationException", classParents = ["java.lang.RuntimeException","java.lang.Exception","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.Throwable"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "VerifyError", classPackage = Just "java.lang", classModName = "Java.Lang.VerifyError", classParents = ["java.lang.LinkageError","java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "VirtualMachineError", classPackage = Just "java.lang", classModName = "Java.Lang.VirtualMachineError", classParents = ["java.lang.Error","java.lang.Throwable","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "printStackTrace", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "fillInStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = True},JavaMethod {methodName = "getCause", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "initCause", methodName' = "", methodParams = [JObj {typeName = "java.lang.Throwable"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Throwable"}], methodReturnType = Just (JObj {typeName = "java.lang.Throwable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Throwable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalizedMessage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getStackTrace", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setStackTrace", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.StackTraceElement"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.StackTraceElement;"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Void", classPackage = Just "java.lang", classModName = "Java.Lang.Void", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "TYPE", fieldType = JObj {typeName = "java.lang.Class"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Annotation", classPackage = Just "java.lang.annotation", classModName = "Java.Lang.Annotation.Annotation", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "annotationType", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "AccessibleObject", classPackage = Just "java.lang.reflect", classModName = "Java.Lang.Reflect.AccessibleObject", classParents = ["java.lang.Object"], classIfaces = ["java.lang.reflect.AnnotatedElement"], classConstructors = [], classMethods = [JavaMethod {methodName = "getAnnotation", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}], methodReturnType = Just (JObj {typeName = "java.lang.annotation.Annotation"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}]}], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAnnotationPresent", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setAccessible", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.reflect.AccessibleObject"}},JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.AccessibleObject;"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setAccessible", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAccessible", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "AnnotatedElement", classPackage = Just "java.lang.reflect", classModName = "Java.Lang.Reflect.AnnotatedElement", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "getAnnotation", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}], methodReturnType = Just (JObj {typeName = "java.lang.annotation.Annotation"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}]}], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAnnotationPresent", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Constructor", classPackage = Just "java.lang.reflect", classModName = "Java.Lang.Reflect.Constructor", classParents = ["java.lang.reflect.AccessibleObject","java.lang.Object"], classIfaces = ["java.lang.reflect.GenericDeclaration","java.lang.reflect.Member"], classConstructors = [], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getModifiers", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "newInstance", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [GenericArray {jgtComponentType = NotSoGeneric {jgtBasetype = "java.lang.Object"}}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSynthetic", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getTypeParameters", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.TypeVariable"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.reflect.TypeVariable", jgtParameters = [Parameterized {jgtBasetype = "java.lang.reflect.Constructor", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaringClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotation", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}], methodReturnType = Just (JObj {typeName = "java.lang.annotation.Annotation"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}]}], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getParameterTypes", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Class"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toGenericString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getGenericParameterTypes", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.Type"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.Type;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getExceptionTypes", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Class"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getGenericExceptionTypes", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.Type"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.Type;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isVarArgs", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getParameterAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAnnotationPresent", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setAccessible", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.reflect.AccessibleObject"}},JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.AccessibleObject;"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setAccessible", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAccessible", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "PUBLIC", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DECLARED", fieldType = JInt, fieldFinal = True, fieldStatic = True}], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Field", classPackage = Just "java.lang.reflect", classModName = "Java.Lang.Reflect.Field", classParents = ["java.lang.reflect.AccessibleObject","java.lang.Object"], classIfaces = ["java.lang.reflect.Member"], classConstructors = [], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getModifiers", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getBoolean", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getByte", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getShort", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getChar", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInt", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLong", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getFloat", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDouble", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSynthetic", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaringClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotation", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}], methodReturnType = Just (JObj {typeName = "java.lang.annotation.Annotation"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}]}], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isEnumConstant", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getType", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getGenericType", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.reflect.Type"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.reflect.Type"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toGenericString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "set", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setBoolean", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setByte", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JByte], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "byte"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setChar", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setShort", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JShort], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "short"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setInt", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setLong", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setFloat", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setDouble", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAnnotationPresent", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setAccessible", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.reflect.AccessibleObject"}},JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.AccessibleObject;"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setAccessible", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAccessible", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "PUBLIC", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DECLARED", fieldType = JInt, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "GenericDeclaration", classPackage = Just "java.lang.reflect", classModName = "Java.Lang.Reflect.GenericDeclaration", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "getTypeParameters", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.TypeVariable"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.reflect.TypeVariable", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Member", classPackage = Just "java.lang.reflect", classModName = "Java.Lang.Reflect.Member", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "getModifiers", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSynthetic", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaringClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [JavaField {fieldName = "PUBLIC", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DECLARED", fieldType = JInt, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Method", classPackage = Just "java.lang.reflect", classModName = "Java.Lang.Reflect.Method", classParents = ["java.lang.reflect.AccessibleObject","java.lang.Object"], classIfaces = ["java.lang.reflect.GenericDeclaration","java.lang.reflect.Member"], classConstructors = [], classMethods = [JavaMethod {methodName = "invoke", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getModifiers", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSynthetic", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getTypeParameters", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.TypeVariable"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.reflect.TypeVariable", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.reflect.Method"}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaringClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotation", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}], methodReturnType = Just (JObj {typeName = "java.lang.annotation.Annotation"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}]}], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaredAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getReturnType", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getParameterTypes", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Class"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toGenericString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getGenericReturnType", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.reflect.Type"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.reflect.Type"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getGenericParameterTypes", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.Type"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.Type;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getExceptionTypes", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Class"}}), methodGenericReturnType = GenericArray {jgtComponentType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getGenericExceptionTypes", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.reflect.Type"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.Type;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isBridge", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isVarArgs", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDefaultValue", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getParameterAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAnnotationPresent", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.annotation.Annotation"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAnnotations", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.annotation.Annotation"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.annotation.Annotation;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setAccessible", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.reflect.AccessibleObject"}},JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.reflect.AccessibleObject;"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setAccessible", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAccessible", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "PUBLIC", fieldType = JInt, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "DECLARED", fieldType = JInt, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Type", classPackage = Just "java.lang.reflect", classModName = "Java.Lang.Reflect.Type", classParents = [], classIfaces = [], classConstructors = [], classMethods = [], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "ContentHandler", classPackage = Just "java.net", classModName = "Java.Net.ContentHandler", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "getContent", methodName' = "", methodParams = [JObj {typeName = "java.net.URLConnection"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URLConnection"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getContent", methodName' = "", methodParams = [JObj {typeName = "java.net.URLConnection"},JArr {componentType = JObj {typeName = "java.lang.Class"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URLConnection"},NotSoGeneric {jgtBasetype = "[Ljava.lang.Class;"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "ContentHandlerFactory", classPackage = Just "java.net", classModName = "Java.Net.ContentHandlerFactory", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "createContentHandler", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.net.ContentHandler"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.ContentHandler"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "FileNameMap", classPackage = Just "java.net", classModName = "Java.Net.FileNameMap", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "getContentTypeFor", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "InetAddress", classPackage = Just "java.net", classModName = "Java.Net.InetAddress", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable"], classConstructors = [], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAddress", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JByte}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[B"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getHostName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getHostAddress", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getByName", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.net.InetAddress"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.InetAddress"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isMulticastAddress", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAnyLocalAddress", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLoopbackAddress", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLinkLocalAddress", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSiteLocalAddress", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isMCGlobal", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isMCNodeLocal", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isMCLinkLocal", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isMCSiteLocal", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isMCOrgLocal", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isReachable", methodName' = "", methodParams = [JObj {typeName = "java.net.NetworkInterface"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.NetworkInterface"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isReachable", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getCanonicalHostName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getByAddress", methodName' = "", methodParams = [JArr {componentType = JByte}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"}], methodReturnType = Just (JObj {typeName = "java.net.InetAddress"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.InetAddress"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getByAddress", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JArr {componentType = JByte}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "[B"}], methodReturnType = Just (JObj {typeName = "java.net.InetAddress"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.InetAddress"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAllByName", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.net.InetAddress"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.net.InetAddress;"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocalHost", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.InetAddress"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.InetAddress"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "NetworkInterface", classPackage = Just "java.net", classModName = "Java.Net.NetworkInterface", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getParent", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.NetworkInterface"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.NetworkInterface"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDisplayName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getByName", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.net.NetworkInterface"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.NetworkInterface"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInetAddresses", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [NotSoGeneric {jgtBasetype = "java.net.InetAddress"}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInterfaceAddresses", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.List"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.List", jgtParameters = [NotSoGeneric {jgtBasetype = "java.net.InterfaceAddress"}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSubInterfaces", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [NotSoGeneric {jgtBasetype = "java.net.NetworkInterface"}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getByInetAddress", methodName' = "", methodParams = [JObj {typeName = "java.net.InetAddress"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.InetAddress"}], methodReturnType = Just (JObj {typeName = "java.net.NetworkInterface"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.NetworkInterface"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getNetworkInterfaces", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [NotSoGeneric {jgtBasetype = "java.net.NetworkInterface"}]}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isUp", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLoopback", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isPointToPoint", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "supportsMulticast", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getHardwareAddress", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JByte}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[B"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getMTU", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isVirtual", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Proxy", classPackage = Just "java.net", classModName = "Java.Net.Proxy", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.net.Proxy$Type"},JObj {typeName = "java.net.SocketAddress"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.net.Proxy$Type"},NotSoGeneric {jgtBasetype = "java.net.SocketAddress"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "type", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.Proxy$Type"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.Proxy$Type"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "address", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.SocketAddress"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.SocketAddress"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "NO_PROXY", fieldType = JObj {typeName = "java.net.Proxy"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Proxy$Type", classPackage = Just "java.net", classModName = "Java.Net.ProxyType", classParents = ["java.lang.Enum","java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "values", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.net.Proxy$Type"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.net.Proxy$Type;"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.net.Proxy$Type"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.Proxy$Type"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "name", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Enum"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "valueOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.Class"},JObj {typeName = "java.lang.String"}], methodGenericParams = [Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Enum"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [Parameterized {jgtBasetype = "java.lang.Enum", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}]}]}], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDeclaringClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "ordinal", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "DIRECT", fieldType = JObj {typeName = "java.net.Proxy$Type"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "HTTP", fieldType = JObj {typeName = "java.net.Proxy$Type"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SOCKS", fieldType = JObj {typeName = "java.net.Proxy$Type"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = True, classEnumConstants = [(0,"DIRECT"),(1,"HTTP"),(2,"SOCKS")], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "SocketAddress", classPackage = Just "java.net", classModName = "Java.Net.SocketAddress", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "URI", classPackage = Just "java.net", classModName = "Java.Net.URI", classParents = ["java.lang.Object"], classIfaces = ["java.lang.Comparable","java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JInt,JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.net.URI"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URI"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAbsolute", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPath", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toURL", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.URL"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URL"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "resolve", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.net.URI"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URI"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "resolve", methodName' = "", methodParams = [JObj {typeName = "java.net.URI"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URI"}], methodReturnType = Just (JObj {typeName = "java.net.URI"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URI"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "normalize", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.URI"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URI"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isOpaque", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getScheme", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAuthority", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getFragment", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getQuery", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getUserInfo", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPort", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getHost", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "create", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.net.URI"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URI"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "parseServerAuthority", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.URI"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URI"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "relativize", methodName' = "", methodParams = [JObj {typeName = "java.net.URI"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URI"}], methodReturnType = Just (JObj {typeName = "java.net.URI"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URI"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getRawSchemeSpecificPart", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getSchemeSpecificPart", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getRawAuthority", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getRawUserInfo", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getRawPath", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getRawQuery", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getRawFragment", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toASCIIString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "URL", classPackage = Just "java.net", classModName = "Java.Net.URL", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JInt,JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JInt,JObj {typeName = "java.lang.String"},JObj {typeName = "java.net.URLStreamHandler"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.net.URLStreamHandler"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.net.URL"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URL"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.net.URL"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.net.URLStreamHandler"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URL"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.net.URLStreamHandler"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "openStream", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.InputStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.InputStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPath", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toURI", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.URI"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URI"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAuthority", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getQuery", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getUserInfo", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPort", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDefaultPort", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getProtocol", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getHost", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getFile", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getRef", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "sameFile", methodName' = "", methodParams = [JObj {typeName = "java.net.URL"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URL"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toExternalForm", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "openConnection", methodName' = "", methodParams = [JObj {typeName = "java.net.Proxy"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.Proxy"}], methodReturnType = Just (JObj {typeName = "java.net.URLConnection"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URLConnection"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "openConnection", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.URLConnection"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URLConnection"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getContent", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.Class"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.Class;"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getContent", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setURLStreamHandlerFactory", methodName' = "", methodParams = [JObj {typeName = "java.net.URLStreamHandlerFactory"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URLStreamHandlerFactory"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "URLConnection", classPackage = Just "java.net", classModName = "Java.Net.URLConnection", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getURL", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.URL"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URL"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getContent", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.Class"}}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[Ljava.lang.Class;"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getContent", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInputStream", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.InputStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.InputStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPermission", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.security.Permission"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.security.Permission"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "connect", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getOutputStream", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.io.OutputStream"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.io.OutputStream"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getFileNameMap", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.FileNameMap"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.FileNameMap"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "setFileNameMap", methodName' = "", methodParams = [JObj {typeName = "java.net.FileNameMap"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.FileNameMap"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setConnectTimeout", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getConnectTimeout", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setReadTimeout", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getReadTimeout", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getContentLength", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getContentType", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getContentEncoding", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getExpiration", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDate", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLastModified", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getHeaderField", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getHeaderField", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getHeaderFields", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Map"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Map", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"},Parameterized {jgtBasetype = "java.util.List", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"}]}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getHeaderFieldInt", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getHeaderFieldDate", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getHeaderFieldKey", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setDoInput", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDoInput", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setDoOutput", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDoOutput", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setAllowUserInteraction", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getAllowUserInteraction", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setDefaultAllowUserInteraction", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDefaultAllowUserInteraction", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setUseCaches", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getUseCaches", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setIfModifiedSince", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getIfModifiedSince", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDefaultUseCaches", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setDefaultUseCaches", methodName' = "", methodParams = [JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setRequestProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "addRequestProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getRequestProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getRequestProperties", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Map"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Map", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"},Parameterized {jgtBasetype = "java.util.List", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"}]}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setDefaultRequestProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDefaultRequestProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setContentHandlerFactory", methodName' = "", methodParams = [JObj {typeName = "java.net.ContentHandlerFactory"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.net.ContentHandlerFactory"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "guessContentTypeFromName", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "guessContentTypeFromStream", methodName' = "", methodParams = [JObj {typeName = "java.io.InputStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.InputStream"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "URLStreamHandler", classPackage = Just "java.net", classModName = "Java.Net.URLStreamHandler", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "URLStreamHandlerFactory", classPackage = Just "java.net", classModName = "Java.Net.URLStreamHandlerFactory", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "createURLStreamHandler", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.net.URLStreamHandler"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URLStreamHandler"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Buffer", classPackage = Just "java.nio", classModName = "Java.Nio.Buffer", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "limit", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDirect", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "arrayOffset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "capacity", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mark", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flip", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rewind", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasRemaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isReadOnly", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "ByteBuffer", classPackage = Just "java.nio", classModName = "Java.Nio.ByteBuffer", classParents = ["java.nio.Buffer","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JByte}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JByte},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JByte, methodGenericReturnType = NotSoGeneric {jgtBasetype = "byte"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.nio.ByteBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JByte}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JByte], methodGenericParams = [NotSoGeneric {jgtBasetype = "byte"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JInt,JByte], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "byte"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JByte},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.nio.ByteBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getShort", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getShort", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putShort", methodName' = "", methodParams = [JInt,JShort], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "short"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putShort", methodName' = "", methodParams = [JShort], methodGenericParams = [NotSoGeneric {jgtBasetype = "short"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getChar", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getChar", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putChar", methodName' = "", methodParams = [JInt,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putChar", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInt", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getInt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putInt", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putInt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLong", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLong", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putLong", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putLong", methodName' = "", methodParams = [JInt,JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getFloat", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getFloat", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putFloat", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putFloat", methodName' = "", methodParams = [JInt,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDouble", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDouble", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putDouble", methodName' = "", methodParams = [JInt,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putDouble", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDirect", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JByte}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[B"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "arrayOffset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JByte}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JByte},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "allocate", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "duplicate", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "allocateDirect", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "slice", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asReadOnlyBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compact", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "order", methodName' = "", methodParams = [JObj {typeName = "java.nio.ByteOrder"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.ByteOrder"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "order", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteOrder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteOrder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asCharBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asShortBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asIntBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asLongBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asFloatBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asDoubleBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "capacity", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mark", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flip", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rewind", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasRemaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isReadOnly", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "ByteOrder", classPackage = Just "java.nio", classModName = "Java.Nio.ByteOrder", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "nativeOrder", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteOrder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteOrder"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "BIG_ENDIAN", fieldType = JObj {typeName = "java.nio.ByteOrder"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "LITTLE_ENDIAN", fieldType = JObj {typeName = "java.nio.ByteOrder"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "CharBuffer", classPackage = Just "java.nio", classModName = "Java.Nio.CharBuffer", classParents = ["java.nio.Buffer","java.lang.Object"], classIfaces = ["java.lang.Comparable","java.lang.Appendable","java.lang.CharSequence","java.lang.Readable"], classConstructors = [], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JInt,JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.nio.CharBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Appendable"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Appendable"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "append", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.nio.CharBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "length", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "charAt", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JChar, methodGenericReturnType = NotSoGeneric {jgtBasetype = "char"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "subSequence", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.CharSequence"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDirect", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JChar}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[C"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "arrayOffset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JChar},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JChar}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[C"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "read", methodName' = "", methodParams = [JObj {typeName = "java.nio.CharBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "allocate", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "duplicate", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "slice", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asReadOnlyBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compact", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "order", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteOrder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteOrder"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "capacity", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mark", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flip", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rewind", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasRemaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isReadOnly", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "DoubleBuffer", classPackage = Just "java.nio", classModName = "Java.Nio.DoubleBuffer", classParents = ["java.nio.Buffer","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JDouble}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[D"}], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JDouble},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[D"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JDouble, methodGenericReturnType = NotSoGeneric {jgtBasetype = "double"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.nio.DoubleBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JInt,JDouble], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "double"}], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JDouble},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[D"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JDouble}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[D"}], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.nio.DoubleBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDirect", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JDouble}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[D"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "arrayOffset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JDouble},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[D"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JDouble}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[D"}], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "allocate", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "duplicate", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "slice", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asReadOnlyBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compact", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.DoubleBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.DoubleBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "order", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteOrder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteOrder"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "capacity", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mark", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flip", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rewind", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasRemaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isReadOnly", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "FloatBuffer", classPackage = Just "java.nio", classModName = "Java.Nio.FloatBuffer", classParents = ["java.nio.Buffer","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JFloat}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[F"}], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JFloat},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[F"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.nio.FloatBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JInt,JFloat], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "float"}], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JFloat},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[F"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JFloat}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[F"}], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.nio.FloatBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDirect", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JFloat}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[F"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "arrayOffset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JFloat},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[F"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JFloat}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[F"}], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "allocate", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "duplicate", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "slice", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asReadOnlyBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compact", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.FloatBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.FloatBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "order", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteOrder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteOrder"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "capacity", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mark", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flip", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rewind", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasRemaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isReadOnly", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "IntBuffer", classPackage = Just "java.nio", classModName = "Java.Nio.IntBuffer", classParents = ["java.nio.Buffer","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JInt}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[I"}], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JInt},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[I"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.nio.IntBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JInt},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[I"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JInt}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[I"}], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.nio.IntBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDirect", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JInt}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[I"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "arrayOffset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JInt},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[I"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JInt}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[I"}], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "allocate", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "duplicate", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "slice", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asReadOnlyBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compact", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.IntBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.IntBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "order", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteOrder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteOrder"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "capacity", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mark", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flip", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rewind", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasRemaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isReadOnly", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "LongBuffer", classPackage = Just "java.nio", classModName = "Java.Nio.LongBuffer", classParents = ["java.nio.Buffer","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JLong}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[J"}], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JLong},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[J"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JLong, methodGenericReturnType = NotSoGeneric {jgtBasetype = "long"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.nio.LongBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JInt,JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JLong},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[J"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JLong}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[J"}], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.nio.LongBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDirect", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JLong}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[J"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "arrayOffset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JLong},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[J"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JLong}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[J"}], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "allocate", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "duplicate", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "slice", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asReadOnlyBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compact", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.LongBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.LongBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "order", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteOrder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteOrder"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "capacity", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mark", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flip", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rewind", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasRemaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isReadOnly", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "ShortBuffer", classPackage = Just "java.nio", classModName = "Java.Nio.ShortBuffer", classParents = ["java.nio.Buffer","java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JShort}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[S"}], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JArr {componentType = JShort},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[S"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just JShort, methodGenericReturnType = NotSoGeneric {jgtBasetype = "short"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.nio.ShortBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JShort], methodGenericParams = [NotSoGeneric {jgtBasetype = "short"}], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JInt,JShort], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "short"}], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JShort},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[S"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JArr {componentType = JShort}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[S"}], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.nio.ShortBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isDirect", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JShort}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[S"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "array", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "arrayOffset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JShort},JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "[S"},NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wrap", methodName' = "", methodParams = [JArr {componentType = JShort}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[S"}], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "allocate", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "duplicate", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "slice", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "asReadOnlyBuffer", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compact", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ShortBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ShortBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "order", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.ByteOrder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteOrder"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "limit", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "position", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "capacity", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "mark", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flip", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "rewind", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.Buffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.Buffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasRemaining", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isReadOnly", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Channel", classPackage = Just "java.nio.channels", classModName = "Java.Nio.Channels.Channel", classParents = [], classIfaces = ["java.io.Closeable"], classConstructors = [], classMethods = [JavaMethod {methodName = "close", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isOpen", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Charset", classPackage = Just "java.nio.charset", classModName = "Java.Nio.Charset.Charset", classParents = ["java.lang.Object"], classIfaces = ["java.lang.Comparable"], classConstructors = [], classMethods = [JavaMethod {methodName = "name", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "forName", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.Charset"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.Charset"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compareTo", methodName' = "", methodParams = [JObj {typeName = "java.nio.charset.Charset"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.charset.Charset"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "contains", methodName' = "", methodParams = [JObj {typeName = "java.nio.charset.Charset"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.charset.Charset"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "decode", methodName' = "", methodParams = [JObj {typeName = "java.nio.ByteBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "encode", methodName' = "", methodParams = [JObj {typeName = "java.nio.CharBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "encode", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isSupported", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "defaultCharset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.Charset"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.Charset"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "aliases", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Set"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Set", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "availableCharsets", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.SortedMap"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.SortedMap", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.nio.charset.Charset"}]}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "displayName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "displayName", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isRegistered", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "newDecoder", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.CharsetDecoder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CharsetDecoder"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "newEncoder", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.CharsetEncoder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CharsetEncoder"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "canEncode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "CharsetDecoder", classPackage = Just "java.nio.charset", classModName = "Java.Nio.Charset.CharsetDecoder", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "charset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.Charset"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.Charset"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "decode", methodName' = "", methodParams = [JObj {typeName = "java.nio.ByteBuffer"},JObj {typeName = "java.nio.CharBuffer"},JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"},NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CoderResult"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CoderResult"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "decode", methodName' = "", methodParams = [JObj {typeName = "java.nio.ByteBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.CharBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flush", methodName' = "", methodParams = [JObj {typeName = "java.nio.CharBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CoderResult"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CoderResult"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.CharsetDecoder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CharsetDecoder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "onMalformedInput", methodName' = "", methodParams = [JObj {typeName = "java.nio.charset.CodingErrorAction"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.charset.CodingErrorAction"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CharsetDecoder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CharsetDecoder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "onUnmappableCharacter", methodName' = "", methodParams = [JObj {typeName = "java.nio.charset.CodingErrorAction"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.charset.CodingErrorAction"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CharsetDecoder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CharsetDecoder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replacement", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "malformedInputAction", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.CodingErrorAction"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CodingErrorAction"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "unmappableCharacterAction", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.CodingErrorAction"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CodingErrorAction"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replaceWith", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CharsetDecoder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CharsetDecoder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "maxCharsPerByte", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "averageCharsPerByte", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isAutoDetecting", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isCharsetDetected", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "detectedCharset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.Charset"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.Charset"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "CharsetEncoder", classPackage = Just "java.nio.charset", classModName = "Java.Nio.Charset.CharsetEncoder", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "charset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.Charset"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.Charset"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "encode", methodName' = "", methodParams = [JObj {typeName = "java.nio.CharBuffer"},JObj {typeName = "java.nio.ByteBuffer"},JBoolean], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"},NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"},NotSoGeneric {jgtBasetype = "boolean"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CoderResult"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CoderResult"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "encode", methodName' = "", methodParams = [JObj {typeName = "java.nio.CharBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.CharBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.ByteBuffer"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "flush", methodName' = "", methodParams = [JObj {typeName = "java.nio.ByteBuffer"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.ByteBuffer"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CoderResult"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CoderResult"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "reset", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.CharsetEncoder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CharsetEncoder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "canEncode", methodName' = "", methodParams = [JChar], methodGenericParams = [NotSoGeneric {jgtBasetype = "char"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "canEncode", methodName' = "", methodParams = [JObj {typeName = "java.lang.CharSequence"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.CharSequence"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "onMalformedInput", methodName' = "", methodParams = [JObj {typeName = "java.nio.charset.CodingErrorAction"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.charset.CodingErrorAction"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CharsetEncoder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CharsetEncoder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "onUnmappableCharacter", methodName' = "", methodParams = [JObj {typeName = "java.nio.charset.CodingErrorAction"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.nio.charset.CodingErrorAction"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CharsetEncoder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CharsetEncoder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "maxBytesPerChar", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isLegalReplacement", methodName' = "", methodParams = [JArr {componentType = JByte}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "averageBytesPerChar", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JFloat, methodGenericReturnType = NotSoGeneric {jgtBasetype = "float"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replacement", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JByte}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[B"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "malformedInputAction", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.CodingErrorAction"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CodingErrorAction"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "unmappableCharacterAction", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.nio.charset.CodingErrorAction"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CodingErrorAction"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "replaceWith", methodName' = "", methodParams = [JArr {componentType = JByte}], methodGenericParams = [NotSoGeneric {jgtBasetype = "[B"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CharsetEncoder"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CharsetEncoder"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "CoderResult", classPackage = Just "java.nio.charset", classModName = "Java.Nio.Charset.CoderResult", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "length", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "throwException", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isUnderflow", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isError", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isOverflow", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "malformedForLength", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CoderResult"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CoderResult"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isMalformed", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isUnmappable", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "unmappableForLength", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.nio.charset.CoderResult"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.nio.charset.CoderResult"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "UNDERFLOW", fieldType = JObj {typeName = "java.nio.charset.CoderResult"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "OVERFLOW", fieldType = JObj {typeName = "java.nio.charset.CoderResult"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "CodingErrorAction", classPackage = Just "java.nio.charset", classModName = "Java.Nio.Charset.CodingErrorAction", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "IGNORE", fieldType = JObj {typeName = "java.nio.charset.CodingErrorAction"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "REPLACE", fieldType = JObj {typeName = "java.nio.charset.CodingErrorAction"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "REPORT", fieldType = JObj {typeName = "java.nio.charset.CodingErrorAction"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "BasicPermission", classPackage = Just "java.security", classModName = "Java.Security.BasicPermission", classParents = ["java.security.Permission","java.lang.Object"], classIfaces = ["java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "implies", methodName' = "", methodParams = [JObj {typeName = "java.security.Permission"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.security.Permission"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getActions", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "newPermissionCollection", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.security.PermissionCollection"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.security.PermissionCollection"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkGuard", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "CodeSource", classPackage = Just "java.security", classModName = "Java.Security.CodeSource", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.net.URL"},JArr {componentType = JObj {typeName = "java.security.CodeSigner"}}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URL"},NotSoGeneric {jgtBasetype = "[Ljava.security.CodeSigner;"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.net.URL"},JArr {componentType = JObj {typeName = "java.security.cert.Certificate"}}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.net.URL"},NotSoGeneric {jgtBasetype = "[Ljava.security.cert.Certificate;"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLocation", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.net.URL"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.net.URL"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getCertificates", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.security.cert.Certificate"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.security.cert.Certificate;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "implies", methodName' = "", methodParams = [JObj {typeName = "java.security.CodeSource"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.security.CodeSource"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getCodeSigners", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.security.CodeSigner"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.security.CodeSigner;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Guard", classPackage = Just "java.security", classModName = "Java.Security.Guard", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "checkGuard", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Permission", classPackage = Just "java.security", classModName = "Java.Security.Permission", classParents = ["java.lang.Object"], classIfaces = ["java.security.Guard","java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "implies", methodName' = "", methodParams = [JObj {typeName = "java.security.Permission"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.security.Permission"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getActions", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "newPermissionCollection", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.security.PermissionCollection"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.security.PermissionCollection"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "checkGuard", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "PermissionCollection", classPackage = Just "java.security", classModName = "Java.Security.PermissionCollection", classParents = ["java.lang.Object"], classIfaces = ["java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "add", methodName' = "", methodParams = [JObj {typeName = "java.security.Permission"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.security.Permission"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "implies", methodName' = "", methodParams = [JObj {typeName = "java.security.Permission"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.security.Permission"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setReadOnly", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "elements", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [NotSoGeneric {jgtBasetype = "java.security.Permission"}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isReadOnly", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "ProtectionDomain", classPackage = Just "java.security", classModName = "Java.Security.ProtectionDomain", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.security.CodeSource"},JObj {typeName = "java.security.PermissionCollection"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.security.CodeSource"},NotSoGeneric {jgtBasetype = "java.security.PermissionCollection"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.security.CodeSource"},JObj {typeName = "java.security.PermissionCollection"},JObj {typeName = "java.lang.ClassLoader"},JArr {componentType = JObj {typeName = "java.security.Principal"}}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.security.CodeSource"},NotSoGeneric {jgtBasetype = "java.security.PermissionCollection"},NotSoGeneric {jgtBasetype = "java.lang.ClassLoader"},NotSoGeneric {jgtBasetype = "[Ljava.security.Principal;"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClassLoader", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.ClassLoader"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.ClassLoader"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getCodeSource", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.security.CodeSource"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.security.CodeSource"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPrincipals", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.security.Principal"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.security.Principal;"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getPermissions", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.security.PermissionCollection"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.security.PermissionCollection"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "implies", methodName' = "", methodParams = [JObj {typeName = "java.security.Permission"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.security.Permission"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Collection", classPackage = Just "java.util", classModName = "Java.Util.Collection", classParents = [], classIfaces = ["java.lang.Iterable"], classConstructors = [], classMethods = [JavaMethod {methodName = "add", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isEmpty", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "contains", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "addAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "size", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toArray", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [GenericArray {jgtComponentType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}}], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Object"}}), methodGenericReturnType = GenericArray {jgtComponentType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Object"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "iterator", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Iterator"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Iterator", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remove", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "removeAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "containsAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "retainAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_E"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Comparator", classPackage = Just "java.util", classModName = "Java.Util.Comparator", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "compare", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_T"}},TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Dictionary", classPackage = Just "java.util", classModName = "Java.Util.Dictionary", classParents = ["java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isEmpty", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "size", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remove", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "elements", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "keys", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_K"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]},JavaTypeParam {paramName = TyVar {tyVarName = "_V"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Enumeration", classPackage = Just "java.util", classModName = "Java.Util.Enumeration", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "hasMoreElements", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "nextElement", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_E"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Hashtable", classPackage = Just "java.util", classModName = "Java.Util.Hashtable", classParents = ["java.util.Dictionary","java.lang.Object"], classIfaces = ["java.util.Map","java.lang.Cloneable","java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [JInt,JFloat], constructorGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "float"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JInt], constructorGenericParams = [NotSoGeneric {jgtBasetype = "int"}], constructorTypeParams = []},JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.util.Map"}], constructorGenericParams = [Parameterized {jgtBasetype = "java.util.Map", jgtParameters = [Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}], jgtLowerBounds = []},Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}], jgtLowerBounds = []}]}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "values", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Collection"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "clone", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "isEmpty", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "contains", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "size", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "entrySet", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Set"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Set", jgtParameters = [Parameterized {jgtBasetype = "java.util.Map$Entry", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Map"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Map", jgtParameters = [Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}], jgtLowerBounds = []},Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}], jgtLowerBounds = []}]}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "remove", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "elements", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "keys", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "keySet", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Set"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Set", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "containsValue", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "containsKey", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_K"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]},JavaTypeParam {paramName = TyVar {tyVarName = "_V"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Iterator", classPackage = Just "java.util", classModName = "Java.Util.Iterator", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "hasNext", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "next", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remove", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_E"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "List", classPackage = Just "java.util", classModName = "Java.Util.List", classParents = [], classIfaces = ["java.util.Collection"], classConstructors = [], classMethods = [JavaMethod {methodName = "add", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "add", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "indexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isEmpty", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastIndexOf", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "contains", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "addAll", methodName' = "", methodParams = [JInt,JObj {typeName = "java.util.Collection"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "addAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "size", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toArray", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [GenericArray {jgtComponentType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}}], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Object"}}), methodGenericReturnType = GenericArray {jgtComponentType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Object"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "iterator", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Iterator"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Iterator", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remove", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remove", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "set", methodName' = "", methodParams = [JInt,JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "listIterator", methodName' = "", methodParams = [JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.util.ListIterator"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.ListIterator", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "listIterator", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.ListIterator"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.ListIterator", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "subList", methodName' = "", methodParams = [JInt,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "int"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Just (JObj {typeName = "java.util.List"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.List", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "removeAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "containsAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "retainAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_E"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "ListIterator", classPackage = Just "java.util", classModName = "Java.Util.ListIterator", classParents = [], classIfaces = ["java.util.Iterator"], classConstructors = [], classMethods = [JavaMethod {methodName = "add", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasNext", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "next", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remove", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "set", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "nextIndex", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "previous", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "previousIndex", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hasPrevious", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_E"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Locale", classPackage = Just "java.util", classModName = "Java.Util.Locale", classParents = ["java.lang.Object"], classIfaces = ["java.lang.Cloneable","java.io.Serializable"], classConstructors = [JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.lang.String"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clone", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getLanguage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDefault", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Locale"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.util.Locale"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "setDefault", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "getAvailableLocales", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.util.Locale"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.util.Locale;"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getISOCountries", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.String"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getISOLanguages", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.String"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.String;"}, methodTypeParams = [], methodStatic = True, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getCountry", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getVariant", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getISO3Language", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getISO3Country", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDisplayLanguage", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDisplayLanguage", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDisplayCountry", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDisplayCountry", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDisplayVariant", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDisplayVariant", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDisplayName", methodName' = "", methodParams = [JObj {typeName = "java.util.Locale"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Locale"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getDisplayName", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [JavaField {fieldName = "ENGLISH", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "FRENCH", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "GERMAN", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ITALIAN", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "JAPANESE", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "KOREAN", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CHINESE", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "SIMPLIFIED_CHINESE", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TRADITIONAL_CHINESE", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "FRANCE", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "GERMANY", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ITALY", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "JAPAN", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "KOREA", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CHINA", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "PRC", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "TAIWAN", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "UK", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "US", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CANADA", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "CANADA_FRENCH", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True},JavaField {fieldName = "ROOT", fieldType = JObj {typeName = "java.util.Locale"}, fieldFinal = True, fieldStatic = True}], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = True}
JavaClass {className = "Map", classPackage = Just "java.util", classModName = "Java.Util.Map", classParents = [], classIfaces = [], classConstructors = [], classMethods = [JavaMethod {methodName = "get", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "values", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Collection"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isEmpty", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "size", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "entrySet", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Set"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Set", jgtParameters = [Parameterized {jgtBasetype = "java.util.Map$Entry", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Map"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Map", jgtParameters = [Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}], jgtLowerBounds = []},Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}], jgtLowerBounds = []}]}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remove", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "keySet", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Set"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Set", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "containsValue", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "containsKey", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_K"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]},JavaTypeParam {paramName = TyVar {tyVarName = "_V"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "Properties", classPackage = Just "java.util", classModName = "Java.Util.Properties", classParents = ["java.util.Hashtable","java.util.Dictionary","java.lang.Object"], classIfaces = [], classConstructors = [JavaConstructor {constructorParams = [], constructorGenericParams = [], constructorTypeParams = []},JavaConstructor {constructorParams = [JObj {typeName = "java.util.Properties"}], constructorGenericParams = [NotSoGeneric {jgtBasetype = "java.util.Properties"}], constructorTypeParams = []}], classMethods = [JavaMethod {methodName = "setProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "getProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getProperty", methodName' = "", methodParams = [JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "load", methodName' = "", methodParams = [JObj {typeName = "java.io.Reader"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.Reader"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "load", methodName' = "", methodParams = [JObj {typeName = "java.io.InputStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.InputStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "list", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "list", methodName' = "", methodParams = [JObj {typeName = "java.io.PrintWriter"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.PrintWriter"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "save", methodName' = "", methodParams = [JObj {typeName = "java.io.OutputStream"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.OutputStream"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "store", methodName' = "", methodParams = [JObj {typeName = "java.io.Writer"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.Writer"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "store", methodName' = "", methodParams = [JObj {typeName = "java.io.OutputStream"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.OutputStream"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "loadFromXML", methodName' = "", methodParams = [JObj {typeName = "java.io.InputStream"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.InputStream"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "storeToXML", methodName' = "", methodParams = [JObj {typeName = "java.io.OutputStream"},JObj {typeName = "java.lang.String"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.OutputStream"},NotSoGeneric {jgtBasetype = "java.lang.String"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "storeToXML", methodName' = "", methodParams = [JObj {typeName = "java.io.OutputStream"},JObj {typeName = "java.lang.String"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.io.OutputStream"},NotSoGeneric {jgtBasetype = "java.lang.String"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "propertyNames", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "stringPropertyNames", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Set"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Set", jgtParameters = [NotSoGeneric {jgtBasetype = "java.lang.String"}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "toString", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.String"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.String"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "values", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Collection"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "clone", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "java.lang.Object"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "isEmpty", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "contains", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "size", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "entrySet", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Set"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Set", jgtParameters = [Parameterized {jgtBasetype = "java.util.Map$Entry", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Map"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Map", jgtParameters = [Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}], jgtLowerBounds = []},Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}], jgtLowerBounds = []}]}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "remove", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "elements", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "keys", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Enumeration"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Enumeration", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "keySet", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Set"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Set", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "containsValue", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "containsKey", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = False, methodNative = False, methodSynchronized = True},JavaMethod {methodName = "wait", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "wait", methodName' = "", methodParams = [JLong,JInt], methodGenericParams = [NotSoGeneric {jgtBasetype = "long"},NotSoGeneric {jgtBasetype = "int"}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "getClass", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Class"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.lang.Class", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notify", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False},JavaMethod {methodName = "notifyAll", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = False, methodFinal = True, methodNative = True, methodSynchronized = False}], classFields = [], classTypeParams = [], classEnum = False, classEnumConstants = [], classIface = False, classAnnotation = False, classAbstract = False, classFinal = False}
JavaClass {className = "Set", classPackage = Just "java.util", classModName = "Java.Util.Set", classParents = [], classIfaces = ["java.util.Collection"], classConstructors = [], classMethods = [JavaMethod {methodName = "add", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isEmpty", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "contains", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "addAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "size", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toArray", methodName' = "", methodParams = [JArr {componentType = JObj {typeName = "java.lang.Object"}}], methodGenericParams = [GenericArray {jgtComponentType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}}], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Object"}}), methodGenericReturnType = GenericArray {jgtComponentType = TypeVarReference {jgtName = TyVar {tyVarName = "_T"}}}, methodTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_T"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "toArray", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JArr {componentType = JObj {typeName = "java.lang.Object"}}), methodGenericReturnType = NotSoGeneric {jgtBasetype = "[Ljava.lang.Object;"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "iterator", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Iterator"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Iterator", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_E"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remove", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "removeAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "containsAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "retainAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Collection"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = []}]}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_E"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
JavaClass {className = "SortedMap", classPackage = Just "java.util", classModName = "Java.Util.SortedMap", classParents = [], classIfaces = ["java.util.Map"], classConstructors = [], classMethods = [JavaMethod {methodName = "values", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Collection"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Collection", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "entrySet", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Set"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Set", jgtParameters = [Parameterized {jgtBasetype = "java.util.Map$Entry", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "keySet", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Set"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Set", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "comparator", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.util.Comparator"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.Comparator", jgtParameters = [Wildcard {jgtBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], jgtLowerBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}]}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "subMap", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}], methodReturnType = Just (JObj {typeName = "java.util.SortedMap"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.SortedMap", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "headMap", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}], methodReturnType = Just (JObj {typeName = "java.util.SortedMap"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.SortedMap", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "tailMap", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}], methodReturnType = Just (JObj {typeName = "java.util.SortedMap"}), methodGenericReturnType = Parameterized {jgtBasetype = "java.util.SortedMap", jgtParameters = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}]}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "firstKey", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "lastKey", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "get", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "put", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"},JObj {typeName = "java.lang.Object"}], methodGenericParams = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}},TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "equals", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "hashCode", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "clear", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "isEmpty", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "size", methodName' = "", methodParams = [], methodGenericParams = [], methodReturnType = Just JInt, methodGenericReturnType = NotSoGeneric {jgtBasetype = "int"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "putAll", methodName' = "", methodParams = [JObj {typeName = "java.util.Map"}], methodGenericParams = [Parameterized {jgtBasetype = "java.util.Map", jgtParameters = [Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_K"}}], jgtLowerBounds = []},Wildcard {jgtBounds = [TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}], jgtLowerBounds = []}]}], methodReturnType = Nothing, methodGenericReturnType = NotSoGeneric {jgtBasetype = "void"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "remove", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just (JObj {typeName = "java.lang.Object"}), methodGenericReturnType = TypeVarReference {jgtName = TyVar {tyVarName = "_V"}}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "containsValue", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False},JavaMethod {methodName = "containsKey", methodName' = "", methodParams = [JObj {typeName = "java.lang.Object"}], methodGenericParams = [NotSoGeneric {jgtBasetype = "java.lang.Object"}], methodReturnType = Just JBoolean, methodGenericReturnType = NotSoGeneric {jgtBasetype = "boolean"}, methodTypeParams = [], methodStatic = False, methodAbstract = True, methodFinal = False, methodNative = False, methodSynchronized = False}], classFields = [], classTypeParams = [JavaTypeParam {paramName = TyVar {tyVarName = "_K"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]},JavaTypeParam {paramName = TyVar {tyVarName = "_V"}, paramBounds = [NotSoGeneric {jgtBasetype = "java.lang.Object"}]}], classEnum = False, classEnumConstants = [], classIface = True, classAnnotation = False, classAbstract = True, classFinal = False}
